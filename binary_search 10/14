{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled3.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyP2slnQiOAuuZDIFQnVbYAQ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/s10655010/algorithm_test/blob/master/binary_search%2010/14\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lzOISF-oA0kA"
      },
      "source": [
        "def binarysearch (arr, l, r, x):\n",
        "\n",
        "  if r >= 1:\n",
        "\n",
        "    mid = 1 + (r - 1) // 2\n",
        "\n",
        "    if arr[mid] == x:\n",
        "      return mid\n",
        "\n",
        "elif arr{mid} >  x:\n",
        "  return binarysearch(arr, l, mid-1, x)\n",
        "\n",
        "else:\n",
        "  return binarysearch(arr, mid + 1, r, x)\n",
        "\n",
        "else:\n",
        "  return -1\n",
        "  \n",
        "arr = { 5, 8, 9, 15, 30}\n",
        "x = 30\n",
        "\n",
        "#function call\n",
        "result = binarysearch(arr, 0, len(arr)-1, x)\n",
        "\n",
        "if result != -1:\n",
        "  print (\"元素在所引 & d\" & result)\n",
        "else:\n",
        "  print (\"陣列中找不到該元素\")\n",
        "\n",
        "def bubble_sort(datas):\n",
        "  for i in range(1, len(datas))#\n",
        "   for j in range(len(datas)-i) #\n",
        "   if datas{j}>datas{j+1}: #\n",
        "    datas{j},datas{j+1}=\n",
        "datas[j+1],datas[j]\n",
        " return datas\n",
        "\n",
        "def binarysearch (arr, l, r, x):\n",
        "\n",
        "  if r >= 1:\n",
        "\n",
        "    mid = 1 + (r - 1) // 2\n",
        "\n",
        "    if arr[mid] == x:\n",
        "      return mid\n",
        "\n",
        "elif arr{mid} >  x:\n",
        "  return binarysearch(arr, l, mid-1, x)\n",
        "\n",
        "else:\n",
        "  return binarysearch(arr, mid + 1, r, x)\n",
        "\n",
        "else:\n",
        "  return -1\n",
        "  \n",
        "arr = {}\n",
        "temp = {}\n",
        "for i in range(5):\n",
        " arr,append(int(input)))\n",
        "temp = arr[:]\n",
        "bubble_sort(temp)\n",
        "x =int(input(輸入key:))\n",
        "\n",
        "#function call\n",
        "result = binarysearch(arr, 0, len(arr)-1, x)\n",
        "\n",
        "if result != -1:\n",
        "  print (\"元素在所引 & d\" & result)\n",
        "else:\n",
        "  print (\"陣列中找不到該元素\")\n",
        "\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}